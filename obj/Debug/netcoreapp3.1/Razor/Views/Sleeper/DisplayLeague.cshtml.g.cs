#pragma checksum "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6be7a2a399c27b99b38a010f3e510d45d4813797"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Sleeper_DisplayLeague), @"mvc.1.0.view", @"/Views/Sleeper/DisplayLeague.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/timcasali/dev/dynastyranker/Views/_ViewImports.cshtml"
using DynastyRanker;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/timcasali/dev/dynastyranker/Views/_ViewImports.cshtml"
using DynastyRanker.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6be7a2a399c27b99b38a010f3e510d45d4813797", @"/Views/Sleeper/DisplayLeague.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"daf2ac0503dd5f0a00257298153ae926a1c5f26e", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Sleeper_DisplayLeague : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DynastyRanker.ViewModels.DisplayLeagueViewModel>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/scripts/JavaScript.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("leagueBody"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "6be7a2a399c27b99b38a010f3e510d45d48137975016", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n<meta charset=\"UTF-8\">\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6be7a2a399c27b99b38a010f3e510d45d48137976139", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\n");
#nullable restore
#line 7 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
   
    int count = 1;
    Dictionary<int, string> rankingsDict = new Dictionary<int, string>();

    if (rankingsDict.Count == 0)
    {
        rankingsDict.Add(1, "1st");
        rankingsDict.Add(2, "2nd");
        rankingsDict.Add(3, "3rd");
        rankingsDict.Add(4, "4th");
        rankingsDict.Add(5, "5th");
        rankingsDict.Add(6, "6th");
        rankingsDict.Add(7, "7th");
        rankingsDict.Add(8, "8th");
        rankingsDict.Add(9, "9th");
        rankingsDict.Add(10, "10th");
        rankingsDict.Add(11, "11th");
        rankingsDict.Add(12, "12th");
        rankingsDict.Add(13, "13th");
        rankingsDict.Add(14, "14th");
        rankingsDict.Add(15, "15th");
        rankingsDict.Add(16, "16th");
        rankingsDict.Add(17, "17th");
        rankingsDict.Add(18, "18th");
        rankingsDict.Add(19, "19th");
        rankingsDict.Add(20, "20th");
        rankingsDict.Add(21, "21st");
        rankingsDict.Add(22, "22nd");
        rankingsDict.Add(23, "23rd");
        rankingsDict.Add(24, "24th");
        rankingsDict.Add(25, "25th");
        rankingsDict.Add(26, "26th");
        rankingsDict.Add(27, "27th");
        rankingsDict.Add(28, "28th");
        rankingsDict.Add(29, "29th");
        rankingsDict.Add(30, "30th");
        rankingsDict.Add(31, "31st");
        rankingsDict.Add(32, "32nd");
        rankingsDict.Add(33, "33rd");
        rankingsDict.Add(34, "34th");
        rankingsDict.Add(35, "35th");
        rankingsDict.Add(36, "36th");
        rankingsDict.Add(37, "37th");
        rankingsDict.Add(38, "38th");
        rankingsDict.Add(39, "39th");
        rankingsDict.Add(40, "40th");
        rankingsDict.Add(41, "41st");
        rankingsDict.Add(42, "42nd");
        rankingsDict.Add(43, "43rd");
        rankingsDict.Add(44, "44th");
        rankingsDict.Add(45, "45th");
        rankingsDict.Add(46, "46th");
        rankingsDict.Add(47, "47th");
        rankingsDict.Add(48, "48th");
        rankingsDict.Add(49, "49th");
        rankingsDict.Add(50, "50th");
        rankingsDict.Add(51, "51st");
        rankingsDict.Add(52, "52nd");
        rankingsDict.Add(53, "53rd");
        rankingsDict.Add(54, "54th");
        rankingsDict.Add(55, "55th");
        rankingsDict.Add(56, "56th");
        rankingsDict.Add(57, "57th");
        rankingsDict.Add(58, "58th");
        rankingsDict.Add(59, "59th");
        rankingsDict.Add(60, "60th");
        rankingsDict.Add(61, "61st");
        rankingsDict.Add(62, "62nd");
        rankingsDict.Add(63, "63rd");
        rankingsDict.Add(64, "64th");
        rankingsDict.Add(65, "65th");
        rankingsDict.Add(66, "66th");
        rankingsDict.Add(67, "67th");
        rankingsDict.Add(68, "68th");
        rankingsDict.Add(69, "69th");
        rankingsDict.Add(70, "70th");
        rankingsDict.Add(71, "71st");
        rankingsDict.Add(72, "72nd");
        rankingsDict.Add(73, "73rd");
        rankingsDict.Add(74, "74th");
        rankingsDict.Add(75, "75th");
        rankingsDict.Add(76, "76th");
        rankingsDict.Add(77, "77th");
        rankingsDict.Add(78, "78th");
        rankingsDict.Add(79, "79th");
        rankingsDict.Add(80, "80th");
        rankingsDict.Add(81, "81st");
        rankingsDict.Add(82, "82nd");
        rankingsDict.Add(83, "83rd");
        rankingsDict.Add(84, "84th");
        rankingsDict.Add(85, "85th");
        rankingsDict.Add(86, "86th");
        rankingsDict.Add(87, "87th");
        rankingsDict.Add(88, "88th");
        rankingsDict.Add(89, "89th");
        rankingsDict.Add(90, "90th");
        rankingsDict.Add(91, "91st");
        rankingsDict.Add(92, "92nd");
        rankingsDict.Add(93, "93rd");
        rankingsDict.Add(94, "94th");
        rankingsDict.Add(95, "95th");
        rankingsDict.Add(96, "96th");
        rankingsDict.Add(97, "97th");
        rankingsDict.Add(98, "98th");
        rankingsDict.Add(99, "99th");
        rankingsDict.Add(100, "100th");
    }

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6be7a2a399c27b99b38a010f3e510d45d481379711349", async() => {
                WriteLiteral("\n\n    <div class=\"littleGap\"></div>\n\n");
#nullable restore
#line 120 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
     if (Model.UserInfo.LeagueName != "" || Model.UserInfo.LeagueName != null)
    {

#line default
#line hidden
#nullable disable
                WriteLiteral("        <div class=\"league-name-container\">\n            <div class=\"league-name\"></div>\n            <div class=\"league-name\">");
#nullable restore
#line 124 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                Write(Model.UserInfo.LeagueName);

#line default
#line hidden
#nullable disable
                WriteLiteral("</div>\n            <input type=\"button\" class=\"shareButton\"");
                BeginWriteAttribute("onclick", " onclick=\"", 4486, "\"", 4520, 3);
                WriteAttributeValue("", 4496, "copyUrl(", 4496, 8, true);
#nullable restore
#line 125 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
WriteAttributeValue("", 4504, Model.LeagueID, 4504, 15, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 4519, ")", 4519, 1, true);
                EndWriteAttribute();
                WriteLiteral(" value=\"Share\" />\n        </div>\n");
#nullable restore
#line 127 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
    }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
    <div class=""tinyGap""></div>

    <div class=""infobox-container"">
        <div class=""infobox2-child"">
            <p>
                <div class=""alignCenter""><text class=""boldText"">Team Total</text> ranks the rosters by the owners that hold the most trade value using KeepTradeCut.<br /></div>
");
                WriteLiteral("                <div class=\"alignCenter\">\n                    All values are based on 12 team 0.5 PPR\n");
#nullable restore
#line 138 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                     if (Model.UserInfo.SuperFlex == true)
                    {
                        

#line default
#line hidden
#nullable disable
                WriteLiteral(" Superflex ");
#nullable restore
#line 140 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                
                    }

#line default
#line hidden
#nullable disable
                WriteLiteral("leagues.\n                </div><br />\n                <div class=\"alignCenter\"><text class=\"boldText\">Rankings Last Updated: </text>");
#nullable restore
#line 143 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                                                         Write(Model.LastScrapeDate);

#line default
#line hidden
#nullable disable
                WriteLiteral("<br /></div>\n                <div class=\"legend\">&#11088; : Starters  &#128170; : Best Flex Options ");
                WriteLiteral(" </div>\n");
                WriteLiteral("            </p>\n        </div>\n    </div>\n\n    <div class=\"tinyGap\"></div>\n\n    <div class=\"rostersParent\">\n");
#nullable restore
#line 153 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
          
            int topFive = 0;
        

#line default
#line hidden
#nullable disable
                WriteLiteral("        <div id=\"roster\">\n            <div class=\"position-rankings\">Top Available QBs:</div>\n");
#nullable restore
#line 158 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             if (!Model.TopWaiverPlayers.Where(o => o.PORPosition == "QB").Any())
            {
                topFive = 0;
                

#line default
#line hidden
#nullable disable
                WriteLiteral("No ranked players at this position.");
#nullable restore
#line 161 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                                
            }
            else
            {
                topFive = 0;
            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 167 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             foreach (var player in Model.TopWaiverPlayers.Where(o => o.PORPosition == "QB").OrderByDescending(o => o.PORValue))
            {
                if (topFive < 5)
                {
                    if (player.PORValue == 0)
                        continue;

                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 174 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
               Write(player.PORName);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 175 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
               Write(player.PORValue);

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <br />\n");
#nullable restore
#line 177 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                    topFive++;
                }
                else
                {
                    topFive = 0;
                    break;
                }
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("        </div>\n\n        <div id=\"roster\">\n            <div class=\"position-rankings\">Top Available RBs:</div>\n");
#nullable restore
#line 189 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             if (!Model.TopWaiverPlayers.Where(o => o.PORPosition == "RB").Any())
            {
                topFive = 0;
                

#line default
#line hidden
#nullable disable
                WriteLiteral("No ranked players at this position.");
#nullable restore
#line 192 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                                
            }
            else
            {
                topFive = 0;
            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 198 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             foreach (var player in Model.TopWaiverPlayers.Where(o => o.PORPosition == "RB").OrderByDescending(o => o.PORValue))
            {
                if (topFive < 5)
                {
                    if (player.PORValue == 0)
                        continue;

                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 205 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
               Write(player.PORName);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 206 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
               Write(player.PORValue);

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <br />\n");
#nullable restore
#line 208 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                    topFive++;
                }
                else
                {
                    topFive = 0;
                    break;
                }
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("        </div>\n\n        <div id=\"roster\">\n            <div class=\"position-rankings\">Top Available WRs:</div>\n");
#nullable restore
#line 220 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             if (!Model.TopWaiverPlayers.Where(o => o.PORPosition == "WR").Any())
            {
                topFive = 0;
                

#line default
#line hidden
#nullable disable
                WriteLiteral("No ranked players at this position.");
#nullable restore
#line 223 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                                
            }
            else
            {
                topFive = 0;
            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 229 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             foreach (var player in Model.TopWaiverPlayers.Where(o => o.PORPosition == "WR").OrderByDescending(o => o.PORValue))
            {
                if (topFive < 5)
                {
                    if (player.PORValue == 0)
                        continue;

                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 236 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
               Write(player.PORName);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 237 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
               Write(player.PORValue);

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <br />\n");
#nullable restore
#line 239 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                    topFive++;
                }
                else
                {
                    topFive = 0;
                    break;
                }
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("        </div>\n\n        <div id=\"roster\">\n            <div class=\"position-rankings\">Top Available TEs:</div>\n");
#nullable restore
#line 251 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             if (!Model.TopWaiverPlayers.Where(o => o.PORPosition == "TE").Any())
            {
                topFive = 0;
                

#line default
#line hidden
#nullable disable
                WriteLiteral("No ranked players at this position.");
#nullable restore
#line 254 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                                
            }
            else
            {
                topFive = 0;
            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 260 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             foreach (var player in Model.TopWaiverPlayers.Where(o => o.PORPosition == "TE").OrderByDescending(o => o.PORValue))
            {
                if (topFive < 5)
                {
                    if (player.PORValue == 0)
                        continue;

                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 267 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
               Write(player.PORName);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 268 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
               Write(player.PORValue);

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <br />\n");
#nullable restore
#line 270 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                    topFive++;
                }
                else
                {
                    topFive = 0;
                    break;
                }
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("        </div>\n    </div>\n\n    <div class=\"tinyGap\"></div>\n\n    <div class=\"rostersParent\">\n");
#nullable restore
#line 284 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
         foreach (var roster in Model.Rosters)
        {

#line default
#line hidden
#nullable disable
                WriteLiteral("        <div id=\"roster\">\n            <div id=rosterBoldCenter>");
#nullable restore
#line 287 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                Write(rankingsDict[count]);

#line default
#line hidden
#nullable disable
                WriteLiteral(" : ");
#nullable restore
#line 287 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                       Write(roster.DisplayName);

#line default
#line hidden
#nullable disable
                WriteLiteral("<br /></div>\n\n            <div id=rosterBoldCenter>Team Total: ");
#nullable restore
#line 289 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                            Write(roster.TeamRankingTotal);

#line default
#line hidden
#nullable disable
                WriteLiteral("</div><br />\n            <div id=rosterBoldCenter>Best Starting Lineup:<br />");
#nullable restore
#line 290 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                           Write(rankingsDict[roster.StartingTeamRank]);

#line default
#line hidden
#nullable disable
                WriteLiteral(" <text>-</text> ");
#nullable restore
#line 290 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                                                                                 Write(Math.Floor(roster.TeamStartingTotal));

#line default
#line hidden
#nullable disable
                WriteLiteral("</div><br />\n\n            <div id=rosterBoldCenter>");
                WriteLiteral("</div><br />\n\n");
                WriteLiteral("            <div class=\"position-rankings\">QB Ranking: ");
#nullable restore
#line 295 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                  Write(rankingsDict[roster.QBRank]);

#line default
#line hidden
#nullable disable
                WriteLiteral(" <text> - </text>");
#nullable restore
#line 295 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                                                               Write(roster.QBRankingTotal);

#line default
#line hidden
#nullable disable
                WriteLiteral("</div>\n");
#nullable restore
#line 296 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             foreach (var player in roster.PlayersOnRoster.Where(o => o.Value.PORPosition == "QB").OrderByDescending(o => o.Value.PORValue))
            {
                if (roster.StartingPlayerList.Contains(player.Value.PORName))
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <span>&#11088;</span>\n");
#nullable restore
#line 301 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                }
                if (roster.StartingFlexList.Contains(player.Value.PORName))
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <span>&#128170;</span>\n");
#nullable restore
#line 305 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                }
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 306 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
           Write(player.Value.PORName);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 307 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
           Write(player.Value.PORValue);

#line default
#line hidden
#nullable disable
                WriteLiteral("                <br />\n");
#nullable restore
#line 310 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("            <br />\n            <div class=\"position-rankings\">RB Ranking: ");
#nullable restore
#line 312 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                  Write(rankingsDict[roster.RBRank]);

#line default
#line hidden
#nullable disable
                WriteLiteral(" <text> - </text>");
#nullable restore
#line 312 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                                                               Write(roster.RBRankingTotal);

#line default
#line hidden
#nullable disable
                WriteLiteral(" </div>\n");
#nullable restore
#line 314 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             foreach (var player in roster.PlayersOnRoster.Where(o => o.Value.PORPosition == "RB").OrderByDescending(o => o.Value.PORValue))
            {
                if (roster.StartingPlayerList.Contains(player.Value.PORName))
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <span>&#11088;</span>\n");
#nullable restore
#line 319 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                }
                if (roster.StartingFlexList.Contains(player.Value.PORName))
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <span>&#128170;</span>\n");
#nullable restore
#line 323 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                }
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 324 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
           Write(player.Value.PORName);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 325 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
           Write(player.Value.PORValue);

#line default
#line hidden
#nullable disable
                WriteLiteral("                <br />\n");
#nullable restore
#line 328 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"

            }

#line default
#line hidden
#nullable disable
                WriteLiteral("            <br />\n            <div class=\"position-rankings\">WR Ranking: ");
#nullable restore
#line 331 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                  Write(rankingsDict[roster.WRRank]);

#line default
#line hidden
#nullable disable
                WriteLiteral(" <text> - </text>");
#nullable restore
#line 331 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                                                               Write(roster.WRRankingTotal);

#line default
#line hidden
#nullable disable
                WriteLiteral(" </div>\n");
#nullable restore
#line 333 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             foreach (var player in roster.PlayersOnRoster.Where(o => o.Value.PORPosition == "WR").OrderByDescending(o => o.Value.PORValue))
            {
                if (roster.StartingPlayerList.Contains(player.Value.PORName))
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <span>&#11088;</span>\n");
#nullable restore
#line 338 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                }
                if (roster.StartingFlexList.Contains(player.Value.PORName))
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <span>&#128170;</span>\n");
#nullable restore
#line 342 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                }
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 343 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
           Write(player.Value.PORName);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 344 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
           Write(player.Value.PORValue);

#line default
#line hidden
#nullable disable
                WriteLiteral("                <br />\n");
#nullable restore
#line 347 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("            <br />\n            <div class=\"position-rankings\">TE Ranking: ");
#nullable restore
#line 349 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                  Write(rankingsDict[roster.TERank]);

#line default
#line hidden
#nullable disable
                WriteLiteral(" <text> - </text>");
#nullable restore
#line 349 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                                                               Write(roster.TERankingTotal);

#line default
#line hidden
#nullable disable
                WriteLiteral(" </div>\n");
#nullable restore
#line 351 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             foreach (var player in roster.PlayersOnRoster.Where(o => o.Value.PORPosition == "TE").OrderByDescending(o => o.Value.PORValue))
            {
                if (roster.StartingPlayerList.Contains(player.Value.PORName))
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <span>&#11088;</span>\n");
#nullable restore
#line 356 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                }
                if (roster.StartingFlexList.Contains(player.Value.PORName))
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <span>&#128170;</span>\n");
#nullable restore
#line 360 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                }
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 361 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
           Write(player.Value.PORName);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 362 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
           Write(player.Value.PORValue);

#line default
#line hidden
#nullable disable
                WriteLiteral("                <br />\n");
#nullable restore
#line 365 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("            <br />\n");
#nullable restore
#line 367 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             if (Model.IncludeDraftCapital == true)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <div class=\"position-rankings\">Draft Capital: ");
#nullable restore
#line 369 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                         Write(roster.TotalDraftCapital);

#line default
#line hidden
#nullable disable
                WriteLiteral("</div>\n");
#nullable restore
#line 370 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                if (Model.DraftInfo.Status != "complete")
                {
                    foreach (var pick in roster.DraftPicks.OrderByDescending(o => Int32.Parse(Model.DraftPickRankings[o])))
                    {
                        if (pick.Contains("2022"))
                        {
                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 376 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                       Write(pick);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 377 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                       Write(Model.DraftPickRankings[pick]);

#line default
#line hidden
#nullable disable
                WriteLiteral("<br />\n");
#nullable restore
#line 378 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                        }
                    }

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <br />\n");
#nullable restore
#line 381 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                }

                foreach (var pick in roster.DraftPicks.OrderByDescending(o => Int32.Parse(Model.DraftPickRankings[o])))
                {
                    if (pick.Contains("2023"))
                    {
                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 387 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                   Write(pick);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 388 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                   Write(Model.DraftPickRankings[pick]);

#line default
#line hidden
#nullable disable
                WriteLiteral("<br />\n");
#nullable restore
#line 389 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                    }
                }

#line default
#line hidden
#nullable disable
                WriteLiteral("                <br />\n");
#nullable restore
#line 392 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                foreach (var pick in roster.DraftPicks.OrderByDescending(o => Int32.Parse(Model.DraftPickRankings[o])))
                {
                    if (pick.Contains("2024"))
                    {
                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 396 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                   Write(pick);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 397 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                   Write(Model.DraftPickRankings[pick]);

#line default
#line hidden
#nullable disable
                WriteLiteral("<br />\n");
#nullable restore
#line 398 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                    }
                }
            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 401 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
              
                count++;
            

#line default
#line hidden
#nullable disable
                WriteLiteral("        </div>\n");
#nullable restore
#line 405 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                }

#line default
#line hidden
#nullable disable
                WriteLiteral("    </div>\n\n    <div class=\"rostersParent\">\n        <div id=\"rosters-ranked\">\n            <div class=\"group-rank\">Total Roster</div>\n");
#nullable restore
#line 411 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
              
                int rankCount = 1;
            

#line default
#line hidden
#nullable disable
#nullable restore
#line 414 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             foreach (var ros in Model.RankingLists.TeamTotalRankingList)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <div id=ranking-text>");
#nullable restore
#line 416 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                Write(rankingsDict[rankCount]);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 416 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                          Write(ros);

#line default
#line hidden
#nullable disable
                WriteLiteral("</div><br />\n");
#nullable restore
#line 417 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                rankCount++;
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("        </div>\n        <div id=\"rosters-ranked\">\n            <div class=\"group-rank\">This Season</div>\n");
#nullable restore
#line 422 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
              
                rankCount = 1;
            

#line default
#line hidden
#nullable disable
#nullable restore
#line 425 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             foreach (var ros in Model.RankingLists.StaringLineupRankingList)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <div id=ranking-text>");
#nullable restore
#line 427 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                Write(rankingsDict[rankCount]);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 427 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                          Write(ros);

#line default
#line hidden
#nullable disable
                WriteLiteral("</div><br />\n");
#nullable restore
#line 428 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                rankCount++;
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("        </div>\n        <div id=\"rosters-ranked\">\n            <div class=\"group-rank\">QB Rank</div>\n");
#nullable restore
#line 433 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
              
                rankCount = 1;
            

#line default
#line hidden
#nullable disable
#nullable restore
#line 436 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             foreach (var ros in Model.RankingLists.QBRankingList)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <div id=ranking-text>");
#nullable restore
#line 438 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                Write(rankingsDict[rankCount]);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 438 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                          Write(ros);

#line default
#line hidden
#nullable disable
                WriteLiteral("</div><br />\n");
#nullable restore
#line 439 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                rankCount++;
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("        </div>\n        <div id=\"rosters-ranked\">\n            <div class=\"group-rank\">RB Rank</div>\n");
#nullable restore
#line 444 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
              
                rankCount = 1;
            

#line default
#line hidden
#nullable disable
#nullable restore
#line 447 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             foreach (var ros in Model.RankingLists.RBRankingList)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <div id=ranking-text>");
#nullable restore
#line 449 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                Write(rankingsDict[rankCount]);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 449 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                          Write(ros);

#line default
#line hidden
#nullable disable
                WriteLiteral("</div><br />\n");
#nullable restore
#line 450 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                rankCount++;
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("        </div>\n        <div id=\"rosters-ranked\">\n            <div class=\"group-rank\">WR Rank</div>\n");
#nullable restore
#line 455 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
              
                rankCount = 1;
            

#line default
#line hidden
#nullable disable
#nullable restore
#line 458 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             foreach (var ros in Model.RankingLists.WRRankingList)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <div id=ranking-text>");
#nullable restore
#line 460 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                Write(rankingsDict[rankCount]);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 460 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                          Write(ros);

#line default
#line hidden
#nullable disable
                WriteLiteral("</div><br />\n");
#nullable restore
#line 461 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                rankCount++;
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("        </div>\n        <div id=\"rosters-ranked\">\n            <div class=\"group-rank\">TE Rank</div>\n");
#nullable restore
#line 466 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
              
                rankCount = 1;
            

#line default
#line hidden
#nullable disable
#nullable restore
#line 469 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             foreach (var ros in Model.RankingLists.TERankingList)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <div id=ranking-text>");
#nullable restore
#line 471 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                Write(rankingsDict[rankCount]);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 471 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                          Write(ros);

#line default
#line hidden
#nullable disable
                WriteLiteral("</div><br />\n");
#nullable restore
#line 472 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                rankCount++;
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("        </div>\n        <div id=\"rosters-ranked\">\n            <div class=\"group-rank\">Draft Capital</div>\n");
#nullable restore
#line 477 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
              
                rankCount = 1;
            

#line default
#line hidden
#nullable disable
#nullable restore
#line 480 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
             foreach (var ros in Model.RankingLists.DraftCapitalRankingList)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <div id=ranking-text>");
#nullable restore
#line 482 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                Write(rankingsDict[rankCount]);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 482 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                                                          Write(ros);

#line default
#line hidden
#nullable disable
                WriteLiteral("</div><br />\n");
#nullable restore
#line 483 "/Users/timcasali/dev/dynastyranker/Views/Sleeper/DisplayLeague.cshtml"
                rankCount++;
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("        </div>\n\n    </div>\n        \n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DynastyRanker.ViewModels.DisplayLeagueViewModel> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
